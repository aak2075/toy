# workflow의 이름
name: backend-build-test

# PR 요청에 대해
on:
  pull_request:
    branches:
      - main
    # pr이 생성 되었을 때, 담당 유저가 등록되었을 때, PR에 코드가 머지되었을 때, 라벨이 달렸을 때 동작
    types: [opened, synchronize, reopened]

# 실행 해야할 job
jobs:
  # Job의 이름, 자유롭게 짓습니다.
  ###### 본문 내용과 관련 없는 Job, 빌드 테스트
  build:
    # label [BE] 일때만 동작
    if: ${{ github.event.label.name }} == 'BE'
    # ubuntu 환경에서 실행 (환경은 github이 제공)
    runs-on: ubuntu-latest
    # 각 단계
    steps:
      # 소스코드 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3
      # 빌드
      - name: Build Test
        run: ./gradlew bootJar
      # 아티팩트 업로드
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
         name: jar
         path: |
           toy-0.0.1-SNAPSHOT.jar

  ###### 아래부터 sonarqube와 관련있는 부분 시작
  analysis:
    # label [BE] 일때만 동작
    if: ${{ github.event.label.name }} == 'BE'
    # ubuntu 환경에서 실행 (환경은 github이 제공)
    runs-on: ubuntu-latest
    # 이 Job에서 사용할 환경변수
    env:
      # KEY - VALUE
      SONARQUBE_ID: admin
      SONARQUBE_URL: ${{ secrets.SONARQUBE_URL }}
      PR_NUMBER: ${{ github.event.pull_request.number }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

        # 위에서 설정했던 정적코드 전송 태스크 실행
      - name: Sonaqube Analysis
        run: |
          ./gradlew test sonar \
          -Dsonar.host.url=${{ env.SONARQUBE_URL }} \
          -Dsonar.projectKey=${{ env.SONARQUBE_ID }} \
          -Dsonar.projectName=${{ env.SONARQUBE_ID }}-${{ env.PR_NUMBER }} \
          -Dsonar.token=${{ secrets.SONARQUBE_ACCESS_TOKEN }}

      - name: Comment Sonarqube URL
        uses: actions/github-script@v4
        with:
          # 이슈에 코멘트를 달아주는 스크립트 실행
          script: |
            const { SONARQUBE_ID, SONARQUBE_URL, PR_NUMBER } = process.env
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `📊 ${ SONARQUBE_ID }-${ PR_NUMBER } 분석 결과 확인하기 [링크](${SONARQUBE_URL})`
            })
