plugins {
    id 'java'
    id 'org.sonarqube' version '4.0.0.2929'
    id 'jacoco'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

group = 'toy'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.3'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
}


jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }

}

sonarqube {
    properties {
        property "sonar.host.url", "{서버 url}"
        property "sonar.login", "{access token}"
        property "sonar.projectKey", "{프로젝트 ID}"
        property "sonar.projectName" , "{이번 빌드의 이름 이름}"
        property "sonar.sources", "src"
        property "sonar.language", "java"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.profile", "Sonar way"
        property "sonar.java.binaries", "${buildDir}/classes"
        property "sonar.test.inclusions", "**/*Test.java"
        property "sonar.exclusions", "**/resources/static/**, **/Q*.class, **/test/**"
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}
